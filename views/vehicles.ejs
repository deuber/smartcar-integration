<!-- views/vehicles.ejs -->

<%
  /**
   * Helper function to display a value or a default if undefined or null.
   * @param {any} value - The value to display.
   * @param {string} defaultValue - The default value to display if `value` is undefined or null.
   * @returns {any} - The original value or the default value.
   */
  function displayValue(value, defaultValue = 'N/A') {
    return (value !== undefined && value !== null) ? value : defaultValue;
  }
%>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Vehicle Locations</title>
  
  <!-- Local Bootstrap CSS -->
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  
  <style>
    /* Custom Styling */
    body {
      background-color: #f9f9f9;
    }
    .container {
      margin-top: 30px;
    }
    .notes-section {
      margin-top: 10px;
      padding: 15px;
      border: 1px solid #ddd;
      background-color: #fff;
      border-radius: 5px;
    }
    .note-item {
      margin-bottom: 10px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }
    .note-item:last-child {
      border-bottom: none;
    }
    .toggle-notes-btn {
      margin-left: 10px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 class="text-center mb-4">My Vehicles</h1>

    <!-- Vehicle Details Table -->
    <h2>Vehicle Details</h2>
    <table class="table table-striped table-hover">
      <thead class="table-dark">
        <tr>
          <th>Brand</th>
          <th>Model</th>
          <th>Year</th>
          <th>Miles</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (vehicles.length > 0) { %>
          <% vehicles.forEach(vehicle => { %>
            <tr>
              <td><%= displayValue(vehicle.brand) %></td>
              <td><%= displayValue(vehicle.model) %></td>
              <td><%= displayValue(vehicle.year) %></td>
              <td><%= displayValue(vehicle.miles) %></td>
              <td>
                <button class="btn btn-primary btn-sm toggle-notes-btn" onclick="toggleNotes('<%= vehicle.id %>')">View/Add Notes</button>
              </td>
            </tr>
            <!-- Include the Notes Partial -->
            <%- include('partials/_notes', { vehicle }) %>
          <% }); %>
        <% } else { %>
          <tr>
            <td colspan="5" class="text-center">No vehicle data available.</td>
          </tr>
        <% } %>
      </tbody>
    </table>

    <!-- Google Map -->
    <h2>Vehicle Locations</h2>
    <div id="map" class="w-100" style="height: 500px;"></div>
  </div>

  <!-- Local Bootstrap JavaScript -->
  <script src="/js/bootstrap.bundle.min.js"></script>

  <!-- Embed vehicles data for JavaScript -->
  <script>
    const vehiclesData = <%- JSON.stringify(vehicles) %>;
  </script>

  <!-- Include the notes.js script -->
  <script src="/js/notes.js"></script>

  <script>
    function initMap() {
      // Initialize the map centered on the USA
      const map = new google.maps.Map(document.getElementById('map'), {
        zoom: 4,
        center: { lat: 39.8283, lng: -98.5795 } // Center of USA
      });

      if (vehiclesData.length === 0) {
        console.warn('No vehicles to display on the map.');
        return;
      }

      const bounds = new google.maps.LatLngBounds();

      vehiclesData.forEach(vehicle => {
        if (vehicle.latitude && vehicle.longitude) {
          const position = { lat: vehicle.latitude, lng: vehicle.longitude };
          const marker = new google.maps.Marker({
            position: position,
            map: map,
            title: `${vehicle.year} ${vehicle.brand} ${vehicle.model}`,
            icon: vehicle.brand.toLowerCase() === 'toyota' 
                  ? 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'
                  : vehicle.brand.toLowerCase() === 'subaru'
                  ? 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
                  : 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'
          });

          const infoWindow = new google.maps.InfoWindow({
            content: `<strong>${vehicle.year} ${vehicle.brand} ${vehicle.model}</strong><br>Miles: ${vehicle.miles}`
          });

          marker.addListener('click', () => {
            infoWindow.open(map, marker);
          });

          bounds.extend(position);
        } else {
          console.warn(`Vehicle ID ${vehicle.id} does not have valid location data.`);
        }
      });

      map.fitBounds(bounds);
    }

    /**
     * Helper function to display a value or a default if undefined or null.
     * Accessible in the global scope for use in the InfoWindow content.
     */
    function displayValue(value, defaultValue = 'N/A') {
      return (value !== undefined && value !== null) ? value : defaultValue;
    }

    // Handle Google Maps API loading errors
    function gm_authFailure() { 
      alert('Google Maps authentication failed. Please check your API key.');
    }

    // Attach the auth failure handler
    window.gm_authFailure = gm_authFailure;
  </script>

  <!-- Google Maps API Script with Callback -->
  <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=<%= googleApiKey %>&callback=initMap">
  </script>
</body>
</html>
